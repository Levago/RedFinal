{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentItem.js","components/post/CommentForm.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","components/layout/Navbar.js","components/layout/Landing.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","isAuthenticated","auth","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","handleInput","e","target","value","handleSubmit","preventDefault","to","className","onSubmit","placeholder","onChange","required","minLength","login","alerts","alert","length","map","key","src","spinner","alt","style","width","margin","display","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","onClick","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","loading","useEffect","Spinner","textAlign","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","handleChange","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","class","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","href","rel","ProfileAbout","split","trim","i","ProfileExperience","ProfileEducation","repos","getGitHubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","deleteComment","postId","commentId","comment","addComment","getPost","NotFound","Component","component","rest","render","props","Routes","path","Register","exact","Login","Profiles","Profile","Dashboard","Posts","Post","CreateProfile","EditProfile","AddExperience","AddEducation","logout","authLinks","guestLinks","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,wNCS9BC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAACC,GAC3D,IAAMC,EAAKC,cACXF,EAAS,CACPG,KCZqB,YDarBC,QAAS,CAAEP,MAAKC,YAAWG,QAG7BI,YAAW,kBAAML,EAAS,CAAEG,KCfF,eDesBC,QAASH,MAAOF,K,gBEInDO,EARM,SAACC,GAChBA,EACFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCG5BC,EAAW,yDAAM,WAAOZ,GAAP,mBAAAa,EAAA,+DACVC,cAAVP,EADoB,EACpBA,QAEND,EAAaC,GAHa,kBAMRC,IAAMO,IAAI,aANF,OAMpBC,EANoB,OAO1BhB,EAAS,CACPG,KFvBqB,cEwBrBC,QAASY,EAAIC,OATW,gDAY1BjB,EAAS,CACPG,KF3BoB,eEcI,yDAAN,uDCsFTe,eAJS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAGU,CAAExB,WAAU0B,SD9D5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAOzB,GAAP,qBAAAa,EAAA,6DAC/Ca,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAIdiB,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aAPU,kBAUjCjB,IAAMsB,KAAK,aAAcH,EAAMD,GAVE,OAU7CV,EAV6C,OAYnDhB,EAAS,CACPG,KFtD0B,mBEuD1BC,QAASY,EAAIC,OAGfjB,EAASY,KAjB0C,mDAmB7CmB,EAAS,KAAIC,SAASf,KAAKc,SAE/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWlC,EAASJ,EAASsC,EAAMrC,IAAK,cAEzDG,EAAS,CACPG,KFhEuB,kBEwC0B,0DAA/B,wDC8DTe,EAjGE,SAAC,GAA6C,IAA3CtB,EAA0C,EAA1CA,SAAU0B,EAAgC,EAAhCA,SAAUF,EAAsB,EAAtBA,gBAAsB,EAC5Be,mBAAS,CACvCZ,KAAM,GACNC,MAAO,GACPC,SAAU,GACVW,UAAW,KAL+C,mBACrDC,EADqD,KAC3CC,EAD2C,KAQpDf,EAAqCc,EAArCd,KAAMC,EAA+Ba,EAA/Bb,MAAOC,EAAwBY,EAAxBZ,SAAUW,EAAcC,EAAdD,UAEzBG,EAAc,SAACC,GACnBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAGjDC,EAAY,uCAAG,WAAOH,GAAP,SAAA3B,EAAA,sDACnB2B,EAAEI,iBACEnB,IAAaW,EACfxC,EAAS,wBAAyB,UAElC0B,EAAS,CAAEC,OAAMC,QAAOC,aALP,2CAAH,sDASlB,OAAIL,EACK,kBAAC,IAAD,CAAUyB,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,+BAGA,0BAAMA,UAAU,OAAOC,SAAU,SAACP,GAAD,OAAOG,EAAaH,KACnD,yBAAKM,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,OACZzB,KAAK,OACLmB,MAAOnB,EACP0B,SAAU,SAACT,GAAD,OAAOD,EAAYC,IAC7BU,UAAQ,KAGZ,yBAAKJ,UAAU,cACb,2BACE3C,KAAK,QACL6C,YAAY,gBACZN,MAAOlB,EACPyB,SAAU,SAACT,GAAD,OAAOD,EAAYC,IAC7BjB,KAAK,UAEP,2BAAOuB,UAAU,aAAjB,iFAKF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,WACL6C,YAAY,WACZzB,KAAK,WACL4B,UAAU,IACVT,MAAOjB,EACPwB,SAAU,SAACT,GAAD,OAAOD,EAAYC,OAGjC,yBAAKM,UAAU,cACb,2BACE3C,KAAK,WACL6C,YAAY,mBACZzB,KAAK,YACL4B,UAAU,IACVT,MAAON,EACPa,SAAU,SAACT,GAAD,OAAOD,EAAYC,OAGjC,2BAAOrC,KAAK,SAAS2C,UAAU,kBAAkBJ,MAAM,cAEzD,uBAAGI,UAAU,QAAb,4BAC2B,kBAAC,IAAD,CAAMD,GAAG,UAAT,gBCdlB3B,eAJS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAGU,CAAEgC,MFGrB,SAAC5B,EAAOC,GAAR,8CAAqB,WAAOzB,GAAP,qBAAAa,EAAA,6DAClCa,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAIdiB,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aAPG,kBAUpBjB,IAAMsB,KAAK,YAAaH,EAAMD,GAVV,OAUhCV,EAVgC,OAYtChB,EAAS,CACPG,KFpFuB,gBEqFvBC,QAASY,EAAIC,OAGfjB,EAASY,KAjB6B,mDAmBhCmB,EAAS,KAAIC,SAASf,KAAKc,SAE/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWlC,EAASJ,EAASsC,EAAMrC,IAAK,cAEzDG,EAAS,CACPG,KF9FoB,eEsEgB,0DAArB,wDEHNe,EApED,SAAC,GAAgC,IAA9BkC,EAA6B,EAA7BA,MAAOhC,EAAsB,EAAtBA,gBAAsB,EACZe,mBAAS,CACvCX,MAAO,GACPC,SAAU,KAHgC,mBACrCY,EADqC,KAC3BC,EAD2B,KAMpCd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAETc,EAAc,SAACC,GACnBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAGjDC,EAAY,uCAAG,WAAOH,GAAP,SAAA3B,EAAA,sDACnB2B,EAAEI,iBAEFQ,EAAM5B,EAAOC,GAHM,2CAAH,sDAOlB,OAAIL,EACK,kBAAC,IAAD,CAAUyB,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,2BAGA,0BAAMA,UAAU,OAAOC,SAAU,SAACP,GAAD,OAAOG,EAAaH,KACnD,yBAAKM,UAAU,cACb,2BACE3C,KAAK,QACL6C,YAAY,gBACZN,MAAOlB,EACPyB,SAAU,SAACT,GAAD,OAAOD,EAAYC,IAC7BjB,KAAK,WAGT,yBAAKuB,UAAU,cACb,2BACE3C,KAAK,WACL6C,YAAY,WACZzB,KAAK,WACL4B,UAAU,IACVT,MAAOjB,EACPwB,SAAU,SAACT,GAAD,OAAOD,EAAYC,OAIjC,2BAAOrC,KAAK,SAAS2C,UAAU,kBAAkBJ,MAAM,WAEzD,uBAAGI,UAAU,QAAb,0BACyB,kBAAC,IAAD,CAAMD,GAAG,aAAT,gBCpChB3B,eAJS,SAACC,GAAD,MAAY,CAClCkC,OAAQlC,EAAMmC,SAGDpC,EAlBD,SAAC,GAAD,IAAGmC,EAAH,EAAGA,OAAH,OACD,OAAXA,GACAA,EAAOE,OAAS,GAChBF,EAAOG,KAAI,SAACF,GAAD,OACT,yBAAKG,IAAKH,EAAMrD,GAAI6C,UAAS,sBAAiBQ,EAAMxD,YACjDwD,EAAMzD,W,iBCPE,oBACb,oCACE,yBACE6D,IAAKC,IACLC,IAAI,UACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCazCC,EAlBU,WACvB,OACE,oCACE,yBAAKnB,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,iBACjC,uBAAGA,UAAU,oCADf,iBAGA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,iBACnC,uBAAGA,UAAU,kCADf,mBAGA,kBAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,iBAClC,uBAAGA,UAAU,uCADf,qB,gBCEKoB,EAAoB,yDAAM,WAAOlE,GAAP,eAAAa,EAAA,+EAEjBL,IAAMO,IAAI,mBAFO,OAE7BC,EAF6B,OAInChB,EAAS,CACPG,KRXqB,cQYrBC,QAASY,EAAIC,OANoB,gDASnCjB,EAAS,CACPG,KRZuB,gBQavBC,QAAS,CACPP,IACE,KAAImC,SAASmC,WAAa,2CAC5BC,OAAQ,KAAIpC,SAASoC,UAdU,yDAAN,uDAyFpBC,EAAgB,SAAChC,EAAUiC,GAAX,IAAoBC,EAApB,sGAAqC,WAChEvE,GADgE,mBAAAa,EAAA,sEAIxDa,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAN0C,SAU5CF,IAAMsB,KAAK,eAAgBO,EAAUX,GAVO,OAUxDV,EAVwD,OAY9DhB,EAAS,CACPG,KR5GqB,cQ6GrBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS2E,EAAO,kBAAoB,kBAAmB,YAG3DA,GACHD,EAAQE,KAAK,cArB+C,mDAwBxDzC,EAAS,KAAIC,SAASf,KAAKc,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWlC,EAASJ,EAASsC,EAAMrC,IAAK,cAGzDG,EAAS,CACPG,KR1HuB,gBQ2HvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAhCF,0DAArC,uDCrDdlD,cAAQ,KAAM,CAAEuD,iBD0KC,SAACxE,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAElBL,IAAMkE,OAAN,iCAAuCzE,IAFrB,OAE9Be,EAF8B,OAIpChB,EAAS,CACPG,KRtNwB,iBQuNxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,qBAAsB,YATJ,gDAWpCI,EAAS,CACPG,KR5NuB,gBQ6NvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAb5B,yDAAR,wDC1KjBlD,EA7CI,SAAC,GAAsC,IAApCyD,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBAC1BG,EAAcD,EAAWnB,KAAI,SAACqB,GAAD,OACjC,wBAAIpB,IAAKoB,EAAIC,KACX,4BAAKD,EAAIE,SACT,wBAAIjC,UAAU,WAAW+B,EAAIG,OAC7B,4BACE,kBAAC,IAAD,CAAQC,OAAO,cAAcJ,EAAIK,MADnC,KACoD,IACtC,OAAXL,EAAIhC,GACH,OAEA,kBAAC,IAAD,CAAQoC,OAAO,cAAcJ,EAAIhC,KAGrC,4BACEsC,QAAS,WACPV,EAAiBI,EAAIC,MAEvBhC,UAAU,kBAJZ,cAWJ,OACE,oCACE,wBAAIA,UAAU,QAAd,2BACA,2BAAOA,UAAU,SACf,+BACE,uCACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,SACA,8BAEF,+BAAQ8B,QCWD1D,cAAQ,KAAM,CAAEkE,gBFiMA,SAACnF,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAEjBL,IAAMkE,OAAN,gCAAsCzE,IAFrB,OAE7Be,EAF6B,OAInChB,EAAS,CACPG,KR7OwB,iBQ8OxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,oBAAqB,YATJ,gDAWnCI,EAAS,CACPG,KRnPuB,gBQoPvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAb7B,yDAAR,wDEjMhBlD,EA7CG,SAAC,GAAoC,IAAlCmE,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBACxBE,EAAaD,EAAU7B,KAAI,SAAC+B,GAAD,OAC/B,wBAAI9B,IAAK8B,EAAIT,KACX,4BAAKS,EAAIC,QACT,wBAAI1C,UAAU,WAAWyC,EAAIE,QAC7B,4BACE,kBAAC,IAAD,CAAQR,OAAO,cAAcM,EAAIL,MADnC,KACoD,IACtC,OAAXK,EAAI1C,GACH,OAEA,kBAAC,IAAD,CAAQoC,OAAO,cAAcM,EAAI1C,KAGrC,4BACEsC,QAAS,WACPC,EAAgBG,EAAIT,MAEtBhC,UAAU,kBAJZ,cAWJ,OACE,oCACE,wBAAIA,UAAU,QAAd,yBACA,2BAAOA,UAAU,SACf,+BACE,sCACA,wBAAIA,UAAU,WAAd,UACA,wBAAIA,UAAU,WAAd,SACA,8BAEF,+BAAQwC,QCuCDpE,eALS,SAACC,GAAD,MAAY,CAClCuE,QAASvE,EAAMuE,QACfrE,KAAMF,EAAME,QAG0B,CAAE6C,oBAAmByB,cH2LhC,yDAAM,WAAO3F,GAAP,SAAAa,EAAA,0DAC7B+E,OAAOC,QAAQ,+CADc,0CAGvBrF,IAAMkE,OAAN,eAHuB,OAK7B1E,EAAS,CAAEG,KRjQY,kBQkQvBH,EAAS,CAAEG,KRjQc,oBQmQzBH,EAASJ,EAAS,8CARW,gDAU7BI,EAAS,CACPG,KRxQqB,gBQyQrBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAZnC,yDAAN,wDG3LdlD,EAjEG,SAAC,GAKZ,IAJLgD,EAII,EAJJA,kBACAyB,EAGI,EAHJA,cACQG,EAEJ,EAFJzE,KAAQyE,KAEJ,IADJJ,QAAWA,EACP,EADOA,QAASK,EAChB,EADgBA,QAMpB,OAJAC,qBAAU,WACR9B,MACC,CAACA,IAGF,oCACG6B,GAAuB,OAAZL,EAAmB,kBAACO,EAAD,MAAc,yCAC7C,wBAAInD,UAAU,sBAAd,eACA,uBAAGA,UAAU,QACV,IACD,uBAAGA,UAAU,gBAFf,YAE2CgD,GAAQA,EAAKvE,KAAM,KAEjD,OAAZmE,EACC,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYf,WAAYe,EAAQf,aAChC,kBAAC,EAAD,CAAWU,UAAWK,EAAQL,YAE9B,yBAAKvC,UAAU,QACb,4BACEA,UAAU,iBACVqC,QAAS,WACPQ,MAGF,uBAAG7C,UAAU,sBANf,wBAWJ,oCACG,IACD,uBAAGe,MAAO,CAAEqC,UAAW,WAAvB,gCAEE,6BAFF,8BAIE,6BACA,kBAAC,IAAD,CAAMrD,GAAG,kBAAkBC,UAAU,wBAArC,mBAGG,SCmLA5B,cAAQ,KAAM,CAAEmD,iBAAhBnD,CAAiCiF,aAzO1B,SAAC,GAAgC,IAA9B9B,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAAc,EACpBnC,mBAAS,CACvC4C,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVjC,OAAQ,GACRkC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbuC,mBAC7CxE,EAD6C,KACnCC,EADmC,OAgBFH,oBAAS,GAhBP,mBAgB7C2E,EAhB6C,KAgBxBC,EAhBwB,KAmBlDhC,EAYE1C,EAZF0C,QACAqB,EAWE/D,EAXF+D,QACAC,EAUEhE,EAVFgE,SACAjC,EASE/B,EATF+B,OACAkC,EAQEjE,EARFiE,OACAC,EAOElE,EAPFkE,eACAC,EAMEnE,EANFmE,IACAC,EAKEpE,EALFoE,QACAC,EAIErE,EAJFqE,SACAC,EAGEtE,EAHFsE,SACAC,EAEEvE,EAFFuE,QACAC,EACExE,EADFwE,UAGIG,EAAe,SAACxE,GAAD,OACnBF,EAAY,2BACPD,GADM,kBAERG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAQ9B,OACE,oCACE,wBAAII,UAAU,sBAAd,uBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,8DAIA,qDACA,0BAAMA,UAAU,OAAOC,SAAU,SAACP,GAAD,OAbhB,SAACA,GACpBA,EAAEI,iBACFyB,EAAchC,EAAUiC,GAWkB3B,CAAaH,KACnD,yBAAKM,UAAU,cACb,4BACEvB,KAAK,SACLmB,MAAO0B,EACPnB,SAAU,SAACT,GACTwE,EAAaxE,KAGf,4BAAQE,MAAM,KAAd,gCACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOI,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,UACZzB,KAAK,UACLmB,MAAOqC,EACP9B,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,UACZzB,KAAK,UACLmB,MAAO0D,EACPnD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,WACZzB,KAAK,WACLmB,MAAO2D,EACPpD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,8CAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,WACZzB,KAAK,SACLmB,MAAO4D,EACPrD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,kBACZzB,KAAK,iBACLmB,MAAO6D,EACPtD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,8BACEE,YAAY,0BACZzB,KAAK,MACLmB,MAAO8D,EACPvD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,KAE7B,KAEH,2BAAOM,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEqC,QAAS,kBAAM4B,GAAoBD,IACnC3G,KAAK,SACL2C,UAAU,iBAHZ,4BAOA,2CAGDgE,GACC,oCACE,yBAAKhE,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACE3C,KAAK,OACL6C,YAAY,cACZzB,KAAK,UACLmB,MAAO+D,EACPxD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAIlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACE3C,KAAK,OACL6C,YAAY,eACZzB,KAAK,WACLmB,MAAOgE,EACPzD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAIlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACE3C,KAAK,OACL6C,YAAY,cACZzB,KAAK,UACLmB,MAAOkE,EACP3D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACE3C,KAAK,OACL6C,YAAY,eACZzB,KAAK,WACLmB,MAAOiE,EACP1D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACE3C,KAAK,OACL6C,YAAY,gBACZzB,KAAK,YACLmB,MAAOmE,EACP5D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,QAKtC,2BAAOrC,KAAK,SAAS2C,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBC+CO3B,eAZS,SAACC,GAAD,MAAY,CAClCuE,QAASvE,EAAMuE,WAWuB,CAAErB,gBAAeH,qBAA1ChD,CACbiF,aAxQkB,SAAC,GAKd,IAAD,IAJJT,QAAWA,EAIP,EAJOA,QAASK,EAIhB,EAJgBA,QACpB1B,EAGI,EAHJA,cACAH,EAEI,EAFJA,kBACAI,EACI,EADJA,QACI,EAC4BnC,mBAAS,CACvC4C,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVjC,OAAQ,GACRkC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbT,mBACGxE,EADH,KACaC,EADb,OAgB8CH,oBAAS,GAhBvD,mBAgBG2E,EAhBH,KAgBwBC,EAhBxB,KAkBJf,qBAAU,WACR9B,IAEA5B,EAAY,CACVyC,QAASgB,IAAYL,EAAQX,QAAU,GAAKW,EAAQX,QACpDqB,QAASL,IAAYL,EAAQU,QAAU,GAAKV,EAAQU,QACpDC,SAAUN,IAAYL,EAAQW,SAAW,GAAKX,EAAQW,SACtDjC,OAAQ2B,IAAYL,EAAQtB,OAAS,GAAKsB,EAAQtB,OAClDkC,OAAQP,IAAYL,EAAQY,OAAS,GAAKZ,EAAQY,OAAOW,KAAK,KAC9DV,eACER,IAAYL,EAAQa,eAAiB,GAAKb,EAAQa,eACpDC,IAAKT,IAAYL,EAAQc,IAAM,GAAKd,EAAQc,IAC5CC,QAASV,IAAYL,EAAQwB,OAAS,GAAKxB,EAAQwB,OAAOT,QAC1DC,SAAUX,IAAYL,EAAQwB,OAAS,GAAKxB,EAAQwB,OAAOR,SAC3DC,SAAUZ,IAAYL,EAAQwB,OAAS,GAAKxB,EAAQwB,OAAOP,SAC3DC,QAASb,IAAYL,EAAQwB,OAAS,GAAKxB,EAAQwB,OAAON,QAC1DC,UAAWd,IAAYL,EAAQwB,OAAS,GAAKxB,EAAQwB,OAAOL,cAE7D,CAACd,EAAS7B,IApCT,IAuCFa,EAYE1C,EAZF0C,QACAqB,EAWE/D,EAXF+D,QACAC,EAUEhE,EAVFgE,SACAjC,EASE/B,EATF+B,OACAkC,EAQEjE,EARFiE,OACAC,EAOElE,EAPFkE,eACAC,EAMEnE,EANFmE,IACAC,EAKEpE,EALFoE,QACAC,EAIErE,EAJFqE,SACAC,EAGEtE,EAHFsE,SACAC,EAEEvE,EAFFuE,QACAC,EACExE,EADFwE,UAGIG,EAAe,SAACxE,GAAD,OACnBF,EAAY,2BACPD,GADM,kBAERG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAQ9B,OACE,oCACE,wBAAII,UAAU,sBAAd,uBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,8DAIA,qDACA,0BAAMA,UAAU,OAAOC,SAAU,SAACP,GAAD,OAbhB,SAACA,GACpBA,EAAEI,iBACFyB,EAAchC,EAAUiC,GAAS,GAWS3B,CAAaH,KACnD,yBAAKM,UAAU,cACb,4BACEvB,KAAK,SACLmB,MAAO0B,EACPnB,SAAU,SAACT,GACTwE,EAAaxE,KAGf,4BAAQE,MAAM,KAAd,gCACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOI,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,UACZzB,KAAK,UACLmB,MAAOqC,EACP9B,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,UACZzB,KAAK,UACLmB,MAAO0D,EACPnD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,WACZzB,KAAK,WACLmB,MAAO2D,EACPpD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,8CAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,WACZzB,KAAK,SACLmB,MAAO4D,EACPrD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,kBACZzB,KAAK,iBACLmB,MAAO6D,EACPtD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,MAEhC,2BAAOM,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,8BACEE,YAAY,0BACZzB,KAAK,MACLmB,MAAO8D,EACPvD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,KAE7B,KAEH,2BAAOM,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEqC,QAAS,kBAAM4B,GAAoBD,IACnC3G,KAAK,SACL2C,UAAU,iBAHZ,4BAOA,2CAEDgE,GACC,oCACE,yBAAKhE,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACE3C,KAAK,OACL6C,YAAY,cACZzB,KAAK,UACLmB,MAAO+D,EACPxD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACE3C,KAAK,OACL6C,YAAY,eACZzB,KAAK,WACLmB,MAAOgE,EACPzD,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACE3C,KAAK,OACL6C,YAAY,cACZzB,KAAK,UACLmB,MAAOkE,EACP3D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACE3C,KAAK,OACL6C,YAAY,eACZzB,KAAK,WACLmB,MAAOiE,EACP1D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,OAGlC,yBAAKM,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACE3C,KAAK,OACL6C,YAAY,gBACZzB,KAAK,YACLmB,MAAOmE,EACP5D,SAAU,SAACT,GAAD,OAAOwE,EAAaxE,QAKtC,2BAAOrC,KAAK,SAAS2C,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBCvHO3B,cAAQ,KAAM,CAAEiG,cNsBF,SAAC9E,EAAUiC,GAAX,8CAAuB,WAAOtE,GAAP,mBAAAa,EAAA,sEAE1Ca,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAJ4B,SAQ9BF,IAAM4G,IAAI,0BAA2B/E,EAAUX,GARjB,OAQ1CV,EAR0C,OAUhDhB,EAAS,CACPG,KRlJwB,iBQmJxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,mBAAoB,YAEtC0E,EAAQE,KAAK,cAjBmC,mDAmB1CzC,EAAS,KAAIC,SAASf,KAAKc,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWlC,EAASJ,EAASsC,EAAMrC,IAAK,cAGzDG,EAAS,CACPG,KRhKuB,gBQiKvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UA3BhB,0DAAvB,wDMtBdlD,CAAiCiF,aAvH1B,SAAC,GAAgC,IAA9BgB,EAA6B,EAA7BA,cAAe7C,EAAc,EAAdA,QAAc,EACpBnC,mBAAS,CACvC4C,QAAS,GACTC,MAAO,GACPqB,SAAU,GACVnB,KAAM,GACNrC,GAAI,GACJwE,SAAS,EACTC,YAAa,KARqC,mBAC7CjF,EAD6C,KACnCC,EADmC,OAWXH,oBAAS,GAXE,mBAW7CoF,EAX6C,KAW7BC,EAX6B,KAa5CzC,EAA6D1C,EAA7D0C,QAASC,EAAoD3C,EAApD2C,MAAOqB,EAA6ChE,EAA7CgE,SAAUnB,EAAmC7C,EAAnC6C,KAAMrC,EAA6BR,EAA7BQ,GAAIwE,EAAyBhF,EAAzBgF,QAASC,EAAgBjF,EAAhBiF,YAE/CrE,EAAW,SAACT,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,oCACE,wBAAI+E,MAAM,sBAAV,qBACA,uBAAGA,MAAM,QACP,uBAAGA,MAAM,uBADX,0EAIA,qDACA,0BACEA,MAAM,OACN1E,SAAU,SAACP,GACTA,EAAEI,iBACFuE,EAAc9E,EAAUiC,KAG1B,yBAAKmD,MAAM,cACT,2BACEtH,KAAK,OACL6C,YAAY,cACZzB,KAAK,QACLmB,MAAOsC,EACP/B,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BU,UAAQ,KAGZ,yBAAKuE,MAAM,cACT,2BACEtH,KAAK,OACL6C,YAAY,YACZzB,KAAK,UACLmB,MAAOqC,EACP9B,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BU,UAAQ,KAGZ,yBAAKuE,MAAM,cACT,2BACEtH,KAAK,OACL6C,YAAY,WACZzB,KAAK,WACLmB,MAAO2D,EACPpD,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,yBAAKiF,MAAM,cACT,yCACA,2BACEtH,KAAK,OACLoB,KAAK,OACLmB,MAAOwC,EACPjC,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,yBAAKiF,MAAM,cACT,2BACE,2BACEtH,KAAK,WACLoB,KAAK,UACLmG,QAASL,EACT3E,MAAO2E,EACPpE,SAAU,SAACT,GACTF,EAAY,2BAAKD,GAAN,IAAgBgF,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,gBAcF,yBAAKE,MAAM,cACT,uCACA,2BACEtH,KAAK,OACLoB,KAAK,KACLmB,MAAOG,EACPI,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BmF,SAAUJ,EAAiB,WAAa,MAG5C,yBAAKE,MAAM,cACT,8BACElG,KAAK,cACLqG,KAAK,KACLC,KAAK,IACL7E,YAAY,kBACZN,MAAO4E,EACPrE,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,2BAAOrC,KAAK,SAASsH,MAAM,yBAC3B,kBAAC,IAAD,CAAMA,MAAM,qBAAqB5E,GAAG,aAApC,iBCoBO3B,cAAQ,KAAM,CAAE4G,aPmDH,SAACzF,EAAUiC,GAAX,8CAAuB,WAAOtE,GAAP,mBAAAa,EAAA,sEAEzCa,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAJ2B,SAQ7BF,IAAM4G,IAAI,yBAA0B/E,EAAUX,GARjB,OAQzCV,EARyC,OAU/ChB,EAAS,CACPG,KRvLwB,iBQwLxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,kBAAmB,YAErC0E,EAAQE,KAAK,cAjBkC,mDAmBzCzC,EAAS,KAAIC,SAASf,KAAKc,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWlC,EAASJ,EAASsC,EAAMrC,IAAK,cAGzDG,EAAS,CACPG,KRrMuB,gBQsMvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UA3BjB,0DAAvB,wDOnDblD,CAAgCiF,aA/H1B,SAAC,GAA+B,IAA7B2B,EAA4B,EAA5BA,aAAcxD,EAAc,EAAdA,QAAc,EAClBnC,mBAAS,CACvCqD,OAAQ,GACRC,OAAQ,GACRsC,aAAc,GACd7C,KAAM,GACNrC,GAAI,GACJwE,SAAS,EACTC,YAAa,KARmC,mBAC3CjF,EAD2C,KACjCC,EADiC,OAWTH,oBAAS,GAXA,mBAW3CoF,EAX2C,KAW3BC,EAX2B,KAchDhC,EAOEnD,EAPFmD,OACAC,EAMEpD,EANFoD,OACAsC,EAKE1F,EALF0F,aACA7C,EAIE7C,EAJF6C,KACArC,EAGER,EAHFQ,GACAwE,EAEEhF,EAFFgF,QACAC,EACEjF,EADFiF,YAGIrE,EAAW,SAACT,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,oCACE,wBAAII,UAAU,sBAAd,sBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,sDAIA,qDACA,0BACEA,UAAU,OACVC,SAAU,SAACP,GACTA,EAAEI,iBACFkF,EAAazF,EAAUiC,KAGzB,yBAAKxB,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,WACZzB,KAAK,SACLmB,MAAO8C,EACPvC,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BU,UAAQ,KAGZ,yBAAKJ,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,0BACZzB,KAAK,SACLmB,MAAO+C,EACPxC,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BU,UAAQ,KAGZ,yBAAKJ,UAAU,cACb,2BACE3C,KAAK,OACL6C,YAAY,iBACZzB,KAAK,eACLmB,MAAOqF,EACP9E,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,yBAAKM,UAAU,cACb,yCACA,2BACE3C,KAAK,OACLoB,KAAK,OACLmB,MAAOwC,EACPjC,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,yBAAKM,UAAU,cACb,2BACE,2BACE3C,KAAK,WACLoB,KAAK,UACLmG,QAASL,EACT3E,MAAO2E,EACPpE,SAAU,SAACT,GACTF,EAAY,2BAAKD,GAAN,IAAgBgF,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,oBAcF,yBAAKzE,UAAU,cACb,uCACA,2BACE3C,KAAK,OACLoB,KAAK,KACLmB,MAAOG,EACPI,SAAU,SAACT,GAAD,OAAOS,EAAST,IAC1BmF,SAAUJ,EAAiB,WAAa,MAG5C,yBAAKzE,UAAU,cACb,8BACEvB,KAAK,cACLqG,KAAK,KACLC,KAAK,IACL7E,YAAY,sBACZN,MAAO4E,EACPrE,SAAU,SAACT,GAAD,OAAOS,EAAST,OAG9B,2BAAOrC,KAAK,SAAS2C,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,iBC9EOmF,EAvCK,SAAC,GAQd,IAAD,IAPJtC,QAOI,IANFI,KAAQhB,EAMN,EANMA,IAAKvD,EAMX,EANWA,KAAM0G,EAMjB,EANiBA,OACnB7D,EAKE,EALFA,OACAW,EAIE,EAJFA,QACAsB,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAGF,OACE,oCACE,yBAAKxD,UAAU,oBACb,yBAAKY,IAAKuE,EAAQrE,IAAI,SAASd,UAAU,cACzC,6BACE,4BAAKvB,GACL,2BACG6C,EADH,IACYW,GAAW,qCAAWA,EAAX,MAEvB,uBAAGjC,UAAU,QAAQuD,GAAY,kCAAQA,EAAR,MACjC,kBAAC,IAAD,CAAMxD,GAAE,kBAAaiC,GAAOhC,UAAU,mBAAtC,iBAIF,4BACGwD,EAAO4B,MAAM,EAAG,GAAG1E,KAAI,SAAC2E,EAAOC,GAAR,OACtB,wBAAI3E,IAAK2E,EAAOtF,UAAU,gBACxB,uBAAGA,UAAU,iBADf,IACkCqF,UCiB/BjH,eAJS,SAACC,GAAD,MAAY,CAClCuE,QAASvE,EAAMuE,WAGuB,CAAE2C,YTTf,yDAAM,WAAOrI,GAAP,eAAAa,EAAA,6DAC/Bb,EAAS,CAAEG,KRzBgB,kBQwBI,kBAIXK,IAAMO,IAAI,gBAJC,OAIvBC,EAJuB,OAM7BhB,EAAS,CACPG,KRnCsB,eQoCtBC,QAASY,EAAIC,OARc,gDAW7BjB,EAAS,CACPG,KRrCuB,gBQsCvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAbnC,yDAAN,wDSSZlD,EAxCE,SAAC,GAAqD,IAAnDmH,EAAkD,EAAlDA,YAAkD,IAArC3C,QAAW4C,EAA0B,EAA1BA,SAAUvC,EAAgB,EAAhBA,QAKpD,OAJAC,qBAAU,WACRqC,MACC,CAACA,IAGF,oCACGtC,EACC,kBAACE,EAAD,MAEA,oCACE,wBAAInD,UAAU,sBAAd,cACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,0BADf,uCAIA,yBAAKA,UAAU,YACZwF,EAAS/E,OAAS,EACjB+E,EAAS9E,KAAI,SAACkC,GAAD,OACX,kBAAC,EAAD,CAAajC,IAAKiC,EAAQZ,IAAKY,QAASA,OAG1C,4DC2CC6C,EArEI,SAAC,GASb,IAAD,IARJ7C,QACEX,EAOE,EAPFA,QACAqB,EAME,EANFA,QACAC,EAKE,EALFA,SACAjC,EAIE,EAJFA,OACA8C,EAGE,EAHFA,OAGE,IAFFpB,KAAQvE,EAEN,EAFMA,KAAM0G,EAEZ,EAFYA,OAGhB,OACE,oCACE,yBAAKnF,UAAU,8BACb,yBAAKA,UAAU,iBAAiBY,IAAKuE,EAAQrE,IAAI,KACjD,wBAAId,UAAU,SAASvB,GACvB,uBAAGuB,UAAU,QACVsB,EADH,IACYW,GAAW,qCAAWA,IAElC,2BAAIsB,GAAY,8BAAOA,IACvB,yBAAKvD,UAAU,cACZsD,GAGC,uBACEoC,KAAM,UAAYpC,EAClB3D,OAAO,SACPgG,IAAI,uBAEJ,uBAAG3F,UAAU,wBAGhBoE,GAAUA,EAAOT,SAChB,uBAAG+B,KAAMtB,EAAOT,QAAShE,OAAO,SAASgG,IAAI,uBAC3C,uBAAG3F,UAAU,0BAIhBoE,GAAUA,EAAOR,UAChB,uBAAG8B,KAAMtB,EAAOR,SAAUjE,OAAO,SAASgG,IAAI,uBAC5C,uBAAG3F,UAAU,2BAGhBoE,GAAUA,EAAOP,UAChB,uBAAG6B,KAAMtB,EAAOP,SAAUlE,OAAO,SAASgG,IAAI,uBAC5C,uBAAG3F,UAAU,2BAGhBoE,GAAUA,EAAON,SAChB,uBAAG4B,KAAMtB,EAAON,QAASnE,OAAO,SAASgG,IAAI,uBAC3C,uBAAG3F,UAAU,0BAGhBoE,GAAUA,EAAOL,WAChB,uBACE2B,KAAMtB,EAAOL,UACbpE,OAAO,SACPgG,IAAI,uBAEJ,uBAAG3F,UAAU,gCCnBZ4F,EAvCM,SAAC,GAMf,IAAD,IALJhD,QACEc,EAIE,EAJFA,IACAF,EAGE,EAHFA,OACQ/E,EAEN,EAFFuE,KAAQvE,KAGV,OACE,oCACE,yBAAKuB,UAAU,8BACZ0D,GACC,oCACE,wBAAI1D,UAAU,gBACyB,MAApCvB,EAAKoH,MAAM,IAAIpH,EAAKgC,OAAS,GAC1BhC,EAAKqH,OAAOD,MAAM,KAAK,GAAK,IAC5BpH,EAAKqH,OAAOD,MAAM,KAAK,GAAK,KAAM,IAHxC,OAMA,2BAAInC,GACJ,yBAAK1D,UAAU,UAGnB,wBAAIA,UAAU,gBAAd,aACA,yBAAKA,UAAU,UACZwD,EAAO9C,KAAI,SAAC2E,EAAOU,GAAR,OACV,yBAAKpF,IAAKoF,EAAG/F,UAAU,OACrB,uBAAGA,UAAU,iBADf,IACoCqF,UCDjCW,EAxBW,SAAC,GAEpB,IAAD,IADJnE,WAAcI,EACV,EADUA,QAASC,EACnB,EADmBA,MAA0BnC,GAC7C,EAD0BwD,SAC1B,EADoCgB,QACpC,EAD6CxE,IAAIqC,EACjD,EADiDA,KAAMoC,EACvD,EADuDA,YAE3D,OACE,oCACE,wBAAIxE,UAAU,aAAaiC,GAC3B,2BACE,kBAAC,IAAD,CAAQE,OAAO,cAAcC,GAD/B,KACgD,IAC5CrC,EAAc,kBAAC,IAAD,CAAQoC,OAAO,cAAcpC,GAAtC,QAET,2BACE,8CADF,IAC+BmC,GAE/B,2BACE,iDADF,IACkCsC,KCazByB,EA3BU,SAAC,GAEnB,IAAD,IADJ1D,UAAaG,EACT,EADSA,OAAQC,EACjB,EADiBA,OAAQsC,EACzB,EADyBA,aAAuBlF,GAChD,EADuCwE,QACvC,EADgDxE,IAAIqC,EACpD,EADoDA,KAAMoC,EAC1D,EAD0DA,YAE9D,OACE,oCACE,wBAAIxE,UAAU,aAAa0C,GAC3B,2BACE,kBAAC,IAAD,CAAQP,OAAO,cAAcC,GAD/B,KACgD,IAC5CrC,EAAc,kBAAC,IAAD,CAAQoC,OAAO,cAAcpC,GAAtC,QAET,2BACE,8CADF,IAC+B4C,GAE/B,2BACE,qDADF,IACsCsC,GAEtC,2BACE,iDADF,IACkCT,KCyCzBpG,eAJS,SAACC,GAAD,MAAY,CAClC6H,MAAO7H,EAAMuE,QAAQsD,SAGiB,CAAEC,edgBZ,SAACC,GAAD,8CAAc,WAAOlJ,GAAP,eAAAa,EAAA,+EAEtBL,IAAMO,IAAN,8BAAiCmI,IAFX,OAElClI,EAFkC,OAIxChB,EAAS,CACPG,KRxEmB,YQyEnBC,QAASY,EAAIC,OANyB,gDASxCjB,EAAS,CACPG,KR3EuB,gBQ4EvBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,qBAC/BC,OAAQ,KAAIpC,SAASoC,UAbe,yDAAd,wDchBflD,EAxDO,SAAC,GAAyC,IAAvCgI,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBD,EAAY,EAAZA,MAIjD,OAHAhD,qBAAU,WACRiD,EAAeC,KACd,CAACD,EAAgBC,IAElB,oCACE,yBAAKpG,UAAU,kBACb,wBAAIA,UAAU,qBAAd,gBACW,OAAVkG,EACC,kBAAC/C,EAAD,MAEA+C,EAAMxF,KAAI,SAAC2F,GAAD,OACR,yBAAK1F,IAAK0F,EAAKrE,IAAKhC,UAAU,0BAC5B,6BACE,4BACE,uBACE0F,KAAMW,EAAKC,SACX3G,OAAO,SACPgG,IAAI,uBAEHU,EAAK5H,OAGV,2BAAI4H,EAAK7B,cAEX,6BACE,4BACE,wBAAIxE,UAAU,uBAAd,UACUkG,EAAMK,kBAEhB,wBAAIvG,UAAU,oBAAd,aACakG,EAAMM,gBAEnB,wBAAIxG,UAAU,qBAAd,UACUkG,EAAMO,wBCoDnBrI,eALS,SAACC,GAAD,MAAY,CAClCuE,QAASvE,EAAMuE,QACfrE,KAAMF,EAAME,QAG0B,CAAEmI,efjCZ,SAACC,GAAD,8CAAY,WAAOzJ,GAAP,eAAAa,EAAA,+EAEpBL,IAAMO,IAAN,4BAA+B0I,IAFX,OAEhCzI,EAFgC,OAItChB,EAAS,CACPG,KRvDqB,cQwDrBC,QAASY,EAAIC,OANuB,gDAStCjB,EAAS,CACPG,KRxDuB,gBQyDvBC,QAAS,CAAEP,IAAK,KAAImC,SAASmC,WAAYC,OAAQ,KAAIpC,SAASoC,UAX1B,yDAAZ,wDeiCflD,EAhFC,SAAC,GAKV,IAJLsI,EAII,EAJJA,eAII,IAHJ9D,QAAWA,EAGP,EAHOA,QAASK,EAGhB,EAHgBA,QACpB1E,EAEI,EAFJA,KACAqI,EACI,EADJA,MAMA,OAJA1D,qBAAU,WACRwD,EAAeE,EAAMC,OAAO1J,MAC3B,CAACuJ,EAAgBE,EAAMC,OAAO1J,KAG/B,oCACe,OAAZyF,GAAoBK,EACnB,kBAACE,EAAD,MAEA,oCACE,kBAAC,IAAD,CAAMpD,GAAG,YAAYC,UAAU,iBAA/B,oBAGCzB,EAAKD,kBACa,IAAjBC,EAAK0E,SACL1E,EAAKyE,KAAKhB,MAAQY,EAAQI,KAAKhB,KAC7B,kBAAC,IAAD,CAAMjC,GAAG,gBAAgBC,UAAU,gBAAnC,gBAIJ,yBAAK2E,MAAM,qBACT,kBAAC,EAAD,CAAY/B,QAASA,IACrB,kBAAC,EAAD,CAAcA,QAASA,IACvB,yBAAK5C,UAAU,4BACb,wBAAIA,UAAU,gBAAd,cACC4C,EAAQf,WAAWpB,OAAS,EAC3B,oCACGmC,EAAQf,WAAWnB,KAAI,SAACmB,GAAD,OACtB,kBAAC,EAAD,CACElB,IAAKkB,EAAW1E,GAChB0E,WAAYA,QAKlB,4DAGJ,yBAAK7B,UAAU,4BACb,wBAAIA,UAAU,gBAAd,aACC4C,EAAQL,UAAU9B,OAAS,EAC1B,oCACGmC,EAAQL,UAAU7B,KAAI,SAAC6B,GAAD,OACrB,kBAAC,EAAD,CACE5B,IAAK4B,EAAUpF,GACfoF,UAAWA,QAKjB,2DAGHK,EAAQa,gBACP,kBAAC,EAAD,CAAe2C,SAAUxD,EAAQa,uBCjEzCqD,EAAW,SAAC,GAOX,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,WAII,IAHJjI,KAAQgD,EAGJ,EAHIA,IAAKkF,EAGT,EAHSA,KAAMzI,EAGf,EAHeA,KAAM0G,EAGrB,EAHqBA,OAAQnC,EAG7B,EAH6BA,KAAMmE,EAGnC,EAHmCA,MAAOC,EAG1C,EAH0CA,SAAUC,EAGpD,EAHoDA,KACxD9I,EAEI,EAFJA,KACA+I,EACI,EADJA,YAEA,OACE,oCACE,yBAAKtH,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAciD,IACpB,yBAAKhD,UAAU,YAAYY,IAAKuE,EAAQrE,IAAI,KAC5C,4BAAKrC,KAGT,6BACE,uBAAGuB,UAAU,QAAQkH,GACrB,uBAAGlH,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQmC,OAAO,cAAckF,IAExCC,GACC,oCACE,4BACEjF,QAAS,SAAC3C,GAAD,OAAOqH,EAAQ/E,IACxB3E,KAAK,SACL2C,UAAU,iBAEV,uBAAGA,UAAU,qBACZmH,EAAM1G,OAAS,GAAK,8BAAO0G,EAAM1G,SAEpC,4BACE4B,QAAS,SAAC3C,GAAD,OAAOsH,EAAWhF,IAC3B3E,KAAK,SACL2C,UAAU,iBAEV,uBAAGA,UAAU,wBAEf,kBAAC,IAAD,CAAMD,GAAE,iBAAYiC,GAAOhC,UAAU,mBAArC,aACa,IACVoH,EAAS3G,OAAS,GACjB,0BAAMT,UAAU,iBAAiBoH,EAAS3G,UAG5ClC,EAAK0E,SAAWD,IAASzE,EAAKyE,KAAKhB,KACnC,4BACEK,QAAS,SAAC3C,GAAD,OAAOuH,EAAWjF,IAC3B3E,KAAK,SACL2C,UAAU,kBAEV,uBAAGA,UAAU,uBAW/B8G,EAASS,aAAe,CACtBD,aAAa,GAWf,IAIelJ,eAJS,SAACC,GAAD,MAAY,CAClCE,KAAMF,EAAME,QAG0B,CAAEwI,QC9CnB,SAAC5J,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAETL,IAAM4G,IAAN,0BAA6BnH,IAFpB,OAErBe,EAFqB,OAI3BhB,EAAS,CACPG,KzBzBsB,eyB0BtBC,QAAS,CAAEH,KAAIgK,MAAOjJ,EAAIC,QAND,gDAS3BjB,EAAS,CACPG,KzB/BoB,ayBgCpBC,QAAS,CACPP,IACE,KAAImC,SAASmC,WAAb,oCAGClE,GAAMA,GACTmE,OAAQ,KAAIpC,SAASoC,UAjBE,yDAAR,uDD8C4B0F,WCnBzB,SAAC7J,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAEZL,IAAM4G,IAAN,4BAA+BnH,IAFnB,OAExBe,EAFwB,OAI9BhB,EAAS,CACPG,KzBpDsB,eyBqDtBC,QAAS,CAAEH,KAAIgK,MAAOjJ,EAAIC,QANE,gDAS9BjB,EAAS,CACPG,KzB1DoB,ayB2DpBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,qCAC/BC,OAAQ,KAAIpC,SAASoC,UAbK,yDAAR,uDDmBqC2F,WCIrC,SAAC9J,GAAD,8CAAQ,WAAOD,GAAP,SAAAa,EAAA,+EAExBL,IAAMkE,OAAN,qBAA2BzE,IAFH,OAI9BD,EAAS,CACPG,KzB1EqB,cyB2ErBC,QAASH,IAGXD,EAASJ,EAAS,eAAgB,YATJ,gDAW9BI,EAAS,CACPG,KzBnFoB,ayBoFpBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,oCAC/BC,OAAQ,KAAIpC,SAASoC,UAfK,yDAAR,wDDJXlD,CACb0I,GE1Ca1I,cAAQ,KAAM,CAAEoJ,QDsER,SAACjI,GAAD,8CAAc,WAAOrC,GAAP,iBAAAa,EAAA,6DAC7Ba,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAHe,kBAQfF,IAAMsB,KAAN,cAA0BO,EAAUX,GARrB,OAQ3BV,EAR2B,OAUjChB,EAAS,CACPG,KzBxGkB,WyByGlBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,eAAgB,YAfD,gDAiBjCI,EAAS,CACPG,KzBlHoB,ayBmHpBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,8BAC/BC,OAAQ,KAAIpC,SAASoC,UArBQ,yDAAd,wDCtERlD,EAvCE,SAAC,GAAiB,IAAfoJ,EAAc,EAAdA,QAAc,EACRnI,mBAAS,IADD,mBACzB6H,EADyB,KACnBO,EADmB,KAGhC,OACE,oCACE,yBAAKzH,UAAU,aACb,yBAAKA,UAAU,gBACb,iDAEF,0BACEC,SAAU,SAACP,GACTA,EAAEI,iBACF0H,EAAQ,CAAEN,SACVO,EAAQ,KAEVzH,UAAU,aAEV,8BACEG,SAAU,SAACT,GACT+H,EAAQ/H,EAAEC,OAAOC,QAEnBA,MAAOsH,EACPzI,KAAK,OACLqG,KAAK,KACLC,KAAK,IACL7E,YAAY,gBACZE,UAAQ,IAEV,2BAAO/C,KAAK,SAAS2C,UAAU,oBAAoBJ,MAAM,iBCYpDxB,eAJS,SAACC,GAAD,MAAY,CAClCW,KAAMX,EAAMW,QAG0B,CAAE0I,SF7BlB,yDAAM,WAAOxK,GAAP,eAAAa,EAAA,+EAERL,IAAMO,IAAI,cAFF,OAEpBC,EAFoB,OAI1BhB,EAAS,CACPG,KzBLmB,YyBMnBC,QAASY,EAAIC,OANW,gDAS1BjB,EAAS,CACPG,KzBRoB,ayBSpBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,gCAC/BC,OAAQ,KAAIpC,SAASoC,UAbC,yDAAN,wDE6BTlD,EApCD,SAAC,GAA4C,IAA1CsJ,EAAyC,EAAzCA,SAAyC,IAA/B1I,KAAQ2I,EAAuB,EAAvBA,MAAO1E,EAAgB,EAAhBA,QAKxC,OAJAC,qBAAU,WACRwE,MACC,CAACA,IAGF,oCACGzE,EACC,kBAACE,EAAD,MAEA,oCACE,wBAAInD,UAAU,sBAAd,SACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,4BAGA,kBAAC,EAAD,MACA,yBAAKA,UAAU,SACZ2H,EAAMjH,KAAI,SAAC1B,GAAD,OACT,kBAAC,EAAD,CAAU2B,IAAK3B,EAAKgD,IAAKhD,KAAMA,aC2B9BZ,eAJS,SAACC,GAAD,MAAY,CAClCE,KAAMF,EAAME,QAG0B,CAAEqJ,cHwJb,SAACC,EAAQC,GAAT,8CAAuB,WAAO5K,GAAP,SAAAa,EAAA,+EAE1CL,IAAMkE,OAAN,6BAAmCiG,EAAnC,YAA6CC,IAFH,OAIhD5K,EAAS,CACPG,KzB5LwB,iByB6LxBC,QAASwK,IAGX5K,EAASJ,EAAS,kBAAmB,YATW,gDAWhDI,EAAS,CACPG,KzBxMoB,ayByMpBC,QAAS,CACPP,IACE,KAAImC,SAASmC,WAAa,0CAC5BC,OAAQ,KAAIpC,SAASoC,UAhBuB,yDAAvB,wDGxJdlD,EA/CK,SAAC,GAAD,IAClBwJ,EADkB,EAClBA,cADkB,IAElBG,QAAW/F,EAFO,EAEPA,IAAKkF,EAFE,EAEFA,KAAMzI,EAFJ,EAEIA,KAAM0G,EAFV,EAEUA,OAAQnC,EAFlB,EAEkBA,KAAMqE,EAFxB,EAEwBA,KAC1CQ,EAHkB,EAGlBA,OACAtJ,EAJkB,EAIlBA,KAJkB,OAMlB,oCACE,yBAAKyB,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAciD,IACpB,yBAAKhD,UAAU,YAAYY,IAAKuE,EAAQrE,IAAI,KAC5C,4BAAKrC,KAGT,6BACE,uBAAGuB,UAAU,QAAQkH,GACrB,uBAAGlH,UAAU,aAAb,YAEE,kBAAC,IAAD,CAAQmC,OAAO,cAAckF,KAE7B9I,EAAK0E,SAAWD,IAASzE,EAAKyE,KAAKhB,KACnC,4BACE3E,KAAK,SACL2C,UAAU,iBACVqC,QAAS,SAAC3C,GACRkI,EAAcC,EAAQ7F,KAGxB,uBAAGhC,UAAU,wBCSV5B,cAAQ,KAAM,CAAE4J,WJ+HL,SAACH,EAAQtI,GAAT,8CAAsB,WAAOrC,GAAP,iBAAAa,EAAA,6DACxCa,EAAS,CACbhB,QAAS,CACP,eAAgB,qBAH0B,kBAQ1BF,IAAMsB,KAAN,8BACO6I,GACvBtI,EACAX,GAX0C,OAQtCV,EARsC,OAc5ChB,EAAS,CACPG,KzBpKqB,cyBqKrBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,gBAAiB,YAnBS,gDAqB5CI,EAAS,CACPG,KzB/KoB,ayBgLpBC,QAAS,CACPP,IAAK,KAAImC,SAASmC,WAAa,oCAC/BC,OAAQ,KAAIpC,SAASoC,UAzBmB,yDAAtB,wDI/HXlD,EAvCK,SAAC,GAA4B,IAA1ByJ,EAAyB,EAAzBA,OAAQG,EAAiB,EAAjBA,WAAiB,EACtB3I,mBAAS,IADa,mBACvC6H,EADuC,KACjCO,EADiC,KAG9C,OACE,oCACE,yBAAKzH,UAAU,aACb,yBAAKA,UAAU,gBACb,gDAEF,0BACEA,UAAU,YACVC,SAAU,SAACP,GACTA,EAAEI,iBACFkI,EAAWH,EAAQ,CAAEX,SACrBO,EAAQ,MAGV,8BACEtH,SAAU,SAACT,GACT+H,EAAQ/H,EAAEC,OAAOC,QAEnBA,MAAOsH,EACPzI,KAAK,OACLqG,KAAK,KACLC,KAAK,IACL7E,YAAY,kBACZE,UAAQ,IAEV,2BAAO/C,KAAK,SAAS2C,UAAU,oBAAoBJ,MAAM,iBCgBpDxB,gBAJS,SAACC,GAAD,MAAY,CAClCW,KAAMX,EAAMW,QAG0B,CAAEiJ,QL+FnB,SAAC9K,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAETL,IAAMO,IAAN,qBAAwBd,IAFf,OAErBe,EAFqB,OAI3BhB,EAAS,CACPG,KzBpIkB,WyBqIlBC,QAASY,EAAIC,OANY,gDAS3BjB,EAAS,CACPG,KzBxIoB,ayByIpBC,QAAS,CACPP,IACE,KAAImC,SAASmC,WAAb,0CAGAlE,EACFmE,OAAQ,KAAIpC,SAASoC,UAjBE,yDAAR,wDK/FRlD,EAvCF,SAAC,GAAiD,IAA/C6J,EAA8C,EAA9CA,QAA8C,IAArCjJ,KAAQA,EAA6B,EAA7BA,KAAMiE,EAAuB,EAAvBA,QAAW2D,EAAY,EAAZA,MAIhD,OAHA1D,qBAAU,WACR+E,EAAQrB,EAAMC,OAAO1J,MACpB,CAAC8K,IAEF,oCACGhF,GAAoB,OAATjE,EACV,kBAACmE,EAAD,MAEA,oCACE,kBAAC,IAAD,CAAMpD,GAAG,SAASC,UAAU,OAA5B,QAGA,kBAAC,EAAD,CAAUhB,KAAMA,EAAMsI,aAAa,IACnC,kBAAC,EAAD,CAAaO,OAAQ7I,EAAKgD,MAC1B,yBAAKhC,UAAU,YACZhB,EAAKoI,SAAS1G,KAAI,SAACqH,GAAD,OACjB,kBAAC,EAAD,CACEpH,IAAKoH,EAAQ/F,IACb+F,QAASA,EACTF,OAAQ7I,EAAKgD,eCjBdkG,GAXS,WACtB,OACE,oCACE,wBAAIlI,UAAU,wBACZ,uBAAGA,UAAU,gCADf,mBAGA,uBAAGA,UAAU,SAAb,oC,SC0BS5B,gBAJS,SAACC,GAAD,MAAY,CAClCE,KAAMF,EAAME,QAGCH,EAzBM,SAAC,GAAD,IACR+J,EADQ,EACnBC,UADmB,IAEnB7J,KAAQD,EAFW,EAEXA,gBAAiB2E,EAFN,EAEMA,QACtBoF,EAHgB,4CAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACC,GAAD,OACLjK,GAAoB2E,EAGnB,kBAACkF,EAAcI,GAFf,kBAAC,IAAD,CAAUxI,GAAG,kBC+BNyI,GAhCO,WACpB,OACE,oCACE,6BAASxI,UAAU,aACjB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyI,KAAK,YAAYL,UAAWM,EAAUC,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,SAASL,UAAWQ,EAAOD,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,YAAYL,UAAWS,EAAUF,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,eAAeL,UAAWU,EAASH,OAAK,IACpD,kBAAC,GAAD,CAAcF,KAAK,aAAaL,UAAWW,EAAWJ,OAAK,IAC3D,kBAAC,GAAD,CAAcF,KAAK,SAASL,UAAWY,EAAOL,OAAK,IACnD,kBAAC,GAAD,CAAcF,KAAK,aAAaL,UAAWa,GAAMN,OAAK,IACtD,kBAAC,GAAD,CACEF,KAAK,kBACLL,UAAWc,EACXP,OAAK,IAEP,kBAAC,GAAD,CAAcF,KAAK,gBAAgBL,UAAWe,EAAaR,OAAK,IAChE,kBAAC,GAAD,CACEF,KAAK,kBACLL,UAAWgB,EACXT,OAAK,IAEP,kBAAC,GAAD,CAAcF,KAAK,iBAAiBL,UAAWiB,EAAcV,OAAK,IAClE,kBAAC,IAAD,CAAOP,UAAWF,SC2Bb9J,gBAJS,SAACC,GAAD,MAAY,CAClCE,KAAMF,EAAME,QAG0B,CAAE+K,OhCsCpB,kBAAM,SAACpM,GAC3BA,EAAS,CAAEG,KF9FgB,kBE+F3BH,EAAS,CAAEG,KFrGU,ekC6DRe,EA7DA,SAAC,GAAoD,IAAD,IAAjDG,KAAQD,EAAyC,EAAzCA,gBAAiB2E,EAAwB,EAAxBA,QAAWqG,EAAa,EAAbA,OAC9CC,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMxJ,GAAG,aAAT,eAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cACP,uBAAGC,UAAU,gBAAmB,IAChC,0BAAMA,UAAU,WAAhB,eAGJ,4BACE,uBAAGqC,QAASiH,EAAQ5D,KAAK,UACvB,uBAAG1F,UAAU,wBAA2B,IACxC,0BAAMA,UAAU,WAAhB,aAKFwJ,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMzJ,GAAG,aAAT,eAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAKN,OACE,6BACG,IACD,yBAAKC,UAAU,kBACb,4BACE,kBAAC,IAAD,CAAMD,GAAG,KACP,uBAAGC,UAAU,gBADf,oBAIAiD,GAAW,oCAAG3E,EAAkBiL,EAAYC,QCVvCpL,gBAJS,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAGfF,EArCC,SAAC,GACf,OADuC,EAAtBE,gBAER,kBAAC,IAAD,CAAUyB,GAAG,eAIpB,6BACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,WAAd,iBACA,uBAAGA,UAAU,SAGb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,mBAA/B,WAGA,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,iBAA5B,iB,oCCvBRyJ,GAAe,GCefA,GAAe,CACnBhM,MAAOO,aAAa0L,QAAQ,SAC5BpL,gBAAiB,KACjB2E,SAAS,EACTD,KAAM,MCLFyG,GAAe,CACnB7G,QAAS,KACT4C,SAAU,GACVU,MAAO,GACPjD,SAAS,EACT7D,MAAO,ICJHqK,GAAe,CACnB9B,MAAO,GACP3I,KAAM,KACNiE,SAAS,EACT7D,MAAO,ICfMuK,8BAAgB,CAAEnJ,MJFlB,WAAyC,IAA/BnC,EAA8B,uDAAtBoL,GAAcG,EAAQ,uCAC7CvM,EAAkBuM,EAAlBvM,KAAMC,EAAYsM,EAAZtM,QAEd,OAAQD,GACN,IpCRqB,YoCUnB,MAAM,GAAN,oBAAWgB,GAAX,CAAkBf,IACpB,IpCVwB,eoCWtB,OAAOe,EAAMwL,QAAO,SAACrJ,GAAD,OAAWA,EAAMrD,KAAOG,KAC9C,QACE,OAAOe,IIR2BE,KHkBzB,WAAyC,IAA/BF,EAA8B,uDAAtBoL,GAAcG,EAAQ,uCAC7CvM,EAAkBuM,EAAlBvM,KAAMC,EAAYsM,EAAZtM,QAEd,OAAQD,GACN,IrCxBuB,cqCyBrB,OAAO,2BACFgB,GADL,IAEEC,iBAAiB,EACjB2E,SAAS,EACTD,KAAM1F,IAEV,IrCjC4B,mBqCkC5B,IrC9ByB,gBqCgCvB,OADAU,aAAa8L,QAAQ,QAASxM,EAAQG,OAC/B,uCACFY,GACAf,GAFL,IAGEgB,iBAAiB,EACjB2E,SAAS,IAEb,IrCzCyB,gBqC0CzB,IrCxCsB,aqCyCtB,IrCvCsB,aqCwCtB,IrCvCmB,UqCwCnB,IrCjC2B,kBqCmCzB,OADAjF,aAAa+L,WAAW,SACjB,2BACF1L,GADL,IAEEZ,MAAO,KACPa,iBAAiB,EACjB2E,SAAS,IAGb,QACE,OAAO5E,IGpDiCuE,QFkB/B,WAAyC,IAA/BvE,EAA8B,uDAAtBoL,GAAcG,EAAQ,uCAC7CvM,EAAkBuM,EAAlBvM,KAAMC,EAAYsM,EAAZtM,QAEd,OAAQD,GACN,ItCnBuB,csCoBvB,ItCjB0B,iBsCkBxB,OAAO,2BACFgB,GADL,IAEEuE,QAAStF,EACT2F,SAAS,IAEb,ItCzBwB,esC0BtB,OAAO,2BACF5E,GADL,IAEEmH,SAAUlI,EACV2F,SAAS,IAEb,ItC5ByB,gBsC6BvB,OAAO,2BACF5E,GADL,IAEEe,MAAO9B,EACP2F,SAAS,EACTL,QAAS,OAEb,ItClCyB,gBsCmCvB,OAAO,2BACFvE,GADL,IAEEuE,QAAS,KACTsD,MAAO,GACPjD,SAAS,IAEb,ItC5CqB,YsC6CnB,OAAO,2BACF5E,GADL,IAEE6H,MAAO5I,EACP2F,SAAS,IAEb,QACE,OAAO5E,IExD0CW,KDkBxC,WAAyC,IAA/BX,EAA8B,uDAAtBoL,GAAcG,EAAQ,uCAC7CvM,EAAkBuM,EAAlBvM,KAAMC,EAAYsM,EAAZtM,QACd,OAAQD,GACN,IvCXqB,YuCYnB,OAAO,2BACFgB,GADL,IAEEsJ,MAAOrK,EACP2F,SAAS,IAEb,IvChBoB,WuCiBlB,OAAO,2BACF5E,GADL,IAEEW,KAAM1B,EACN2F,SAAS,IAEb,IvClBoB,WuCmBlB,OAAO,2BACF5E,GADL,IAEEsJ,MAAM,CAAErK,GAAH,oBAAee,EAAMsJ,QAC1B1E,SAAS,IAEb,IvCzBuB,cuC0BrB,OAAO,2BACF5E,GADL,IAEEsJ,MAAOtJ,EAAMsJ,MAAMkC,QAAO,SAAC7K,GAAD,OAAUA,EAAKgD,MAAQ1E,KACjD2F,SAAS,IAEb,IvCjCsB,auCkCpB,OAAO,2BACF5E,GADL,IAEEe,MAAO9B,EACP2F,SAAS,IAEb,IvCtCwB,euCuCtB,OAAO,2BACF5E,GADL,IAEEsJ,MAAOtJ,EAAMsJ,MAAMjH,KAAI,SAAC1B,GAAD,OACrBA,EAAKgD,MAAQ1E,EAAQH,GAArB,2BAA+B6B,GAA/B,IAAqCmI,MAAO7J,EAAQ6J,QAAUnI,KAEhEiE,SAAS,IAEb,IvC3CuB,cuC4CrB,OAAO,2BACF5E,GADL,IAEEW,KAAK,2BAAMX,EAAMW,MAAb,IAAmBoI,SAAU9J,IACjC2F,SAAS,IAEb,IvChD0B,iBuCiDxB,OAAO,2BACF5E,GADL,IAEEW,KAAK,2BACAX,EAAMW,MADP,IAEFoI,SAAU/I,EAAMW,KAAKoI,SAASyC,QAC5B,SAAC9B,GAAD,OAAaA,EAAQ/F,MAAQ1E,KAE/B2F,SAAS,MAGf,QACE,OAAO5E,ME5EP2L,GAAa,CAACC,MAQLC,GANDC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCIjCvM,GAAUO,aAAVP,MACJA,IACFD,EAAaC,IAGf,IAmBe8M,GAnBH,WAKV,OAJArH,qBAAU,WACRgH,GAAMhN,SAASY,OACd,IAGD,kBAAC,IAAD,CAAUoM,MAAOA,IACf,kBAAC,IAAD,KACE,oCACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzB,KAAK,IAAIL,UAAWoC,GAAS7B,OAAK,IACzC,kBAAC,IAAD,CAAOP,UAAWI,UC7B9BiC,IAASnC,OAAO,kBAAC,GAAD,MAASoC,SAASC,eAAe,W","file":"static/js/main.a91a2749.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.13c03d1c.gif\";","import { v4 as uuid } from \"uuid\";\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\n/**\n *\n * @param {string} msg messege the alert will show on the screen\n * @param {string} alertType tells the frontend the kind of alert\n * @param {number} timeout setted to 5000 by default it hold how many ms to the alert disappear\n */\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuid();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_POST = \"GET_POST\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\n","import axios from \"axios\";\n/**\n * @description Function takes a token and add to the header,\n * if there is no token it will delete from the 'global' headers\n * @param token\n *\n *\n * @example This must run along with a local storage:\n *        const { token } = localStorage;\n *        if (token) setAuthToken(token);\n */\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\n\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOG_OUT,\n  CLEAR_PROFILE,\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n/**\n * @description loads user by taking the token from the local storage then takes\n *  a response from a get request and dispatching it\n */\nexport const loadUser = () => async (dispatch) => {\n  const { token } = localStorage;\n  if (token) {\n    setAuthToken(token);\n  }\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n/**\n * @description register user\n * @param {String} name compose the body\n * @param {String} email compose the body\n * @param {String} password compose the body\n */\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n/**\n * @description Login user\n * @param {String} email  compose the body\n * @param {String} password compose the body\n */\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n//Logout / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOG_OUT });\n};\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\n//instead of props you can destruct and use only setAlert\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const handleInput = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords don't match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your DevNet Account\n      </p>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => handleInput(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            value={email}\n            onChange={(e) => handleInput(e)}\n            name='email'\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={(e) => handleInput(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            minLength='6'\n            value={password2}\n            onChange={(e) => handleInput(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </>\n  );\n};\n\n//? ptfr => PropTypes.func.isRequired\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const handleInput = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    login(email, password);\n  };\n\n  //If logged in it redirects\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            value={email}\n            onChange={(e) => handleInput(e)}\n            name='email'\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={(e) => handleInput(e)}\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired, //ptfr\n  isAuthenticated: PropTypes.bool, //prbr\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// use connect anytime you want to interact a component with redux, whether calling an action or getting the state\nimport { connect } from \"react-redux\";\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\n//? ptar => PropTypes.array.isRequired\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default () => (\n  <>\n    <img\n      src={spinner}\n      alt='Loading'\n      style={{ width: \"100px\", margin: \"auto\", display: \"block\" }}\n    />\n  </>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <>\n      <div className='dash-buttons'>\n        <Link to='/edit-profile' className='btn btn-light'>\n          <i className='fas fa-user-circle text-primary'></i> Edit Profile\n        </Link>\n        <Link to='/add-experience' className='btn btn-light'>\n          <i className='fab fa-black-tie text-primary'></i> Add Experience\n        </Link>\n        <Link to='/add-education' className='btn btn-light'>\n          <i className='fas fa-graduation-cap text-primary'></i> Add Education\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default DashboardActions;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n} from \"./types\";\n\n/**\n * @description Gets current users profiles\n */\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg:\n          err.response.statusText + \" - GET_PROFILE error - getCurrentProfile\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Gets All Profiles\n */\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Gets profile by ID\n */\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Gets GitHub repos\n */\nexport const getGitHubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - GET_REPOS error\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Creates or update profile and redirect\n * @param {} formData to be submitted\n * @param {} history object that has the push object, when called it redirects to a client side route\n * @param {Boolean} edit false by deafult, if true it is meant to update\n */\n\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.post(\"/api/profile\", formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    //? This is the proper way to redirect within an action\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Add experience\n * @param {*} formData\n * @param {*} history\n */\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n/**\n * @description Add education\n * @param {*} formData\n * @param {*} history\n */\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Delete an Experience\n * @param {*} id\n */\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Delete an Education\n * @param {*} id\n */\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n/**\n * @description Delete an account and profile\n */\n\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm(\"This action cannot be undone. Are you sure?\")) {\n    try {\n      await axios.delete(`api/profile`);\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteExperience } from \"../../actions/profile\";\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{\" \"}\n        {exp.to === null ? (\n          \" Now\"\n        ) : (\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\n        )}\n      </td>\n      <button\n        onClick={() => {\n          deleteExperience(exp._id);\n        }}\n        className='btn btn-danger'\n      >\n        Delete\n      </button>\n    </tr>\n  ));\n\n  return (\n    <>\n      <h2 className='my-2'>Expperience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <th>Company</th>\n          <th className='hide-sm'>Title</th>\n          <th className='hide-sm'>Years</th>\n          <th />\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { deleteEducation } from \"../../actions/profile\";\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{\" \"}\n        {edu.to === null ? (\n          \" Now\"\n        ) : (\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\n        )}\n      </td>\n      <button\n        onClick={() => {\n          deleteEducation(edu._id);\n        }}\n        className='btn btn-danger'\n      >\n        Delete\n      </button>\n    </tr>\n  ));\n\n  return (\n    <>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <th>School</th>\n          <th className='hide-sm'>Degree</th>\n          <th className='hide-sm'>Years</th>\n          <th />\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\n\n/**\n * @description Fetch data using an actions, bring it from the redux state, and pass it to other components (exp, edu)\n * racfp\n */\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile(); //can't use this if it's not brought in the props above\n  }, [getCurrentProfile]);\n\n  return (\n    <>\n      {loading && profile === null ? <Spinner /> : <> </>}\n      <h1 className='large text-primary'> Dashboard </h1>\n      <p className='lead'>\n        {\" \"}\n        <i className='fas fa-user'></i> Welcome {user && user.name}{\" \"}\n      </p>\n      {profile !== null ? (\n        <>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                deleteAccount();\n              }}\n            >\n              <i className='fas fa-user-minus'></i> Delete My Account\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <p style={{ textAlign: \"center\" }}>\n            You have not setup a profile.\n            <br />\n            Please add your information\n            <br />\n            <Link to='/create-profile' className='btn btn-primary my-1'>\n              Create Profile\n            </Link>\n          </p>{\" \"}\n        </>\n      )}\n    </>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired, //ptfr\n  deleteAccount: PropTypes.func.isRequired, //ptrf\n  auth: PropTypes.object.isRequired, //ptor\n  profile: PropTypes.object.isRequired, //ptor\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"../../actions/profile\";\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const handleChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <select\n            name='status'\n            value={status}\n            onChange={(e) => {\n              handleChange(e);\n            }}\n          >\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            City and state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => handleChange(e)}\n          >\n            {\" \"}\n          </textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          </>\n        )}\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\n/* \n    There is no state to bring from the store, that's why there is no mapStateToProps\n    For the proptypes thogh, the action createProfile must be brought before used.\n */\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n};\n\n// withRouter wrapping the component allows to use the history object and use it from the action\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const handleChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <select\n            name='status'\n            value={status}\n            onChange={(e) => {\n              handleChange(e);\n            }}\n          >\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            City and state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => handleChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => handleChange(e)}\n          >\n            {\" \"}\n          </textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => handleChange(e)}\n              />\n            </div>\n          </>\n        )}\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\n/* \n    If there is no state to bring from the store, mapStateToProps doesn't need \n    to be used and the first argument on \"connect\" is null\n */\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\n//The action createProfile must be brought before used.\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired, //ptfr\n  profile: PropTypes.object.isRequired, //ptor\n};\n\n// withRouter wrapping the component allows to use the history object and use it from the action\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","import React, { useState } from \"react\"; //* racfp\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <>\n      <h1 class='large text-primary'>Add An Experience</h1>\n      <p class='lead'>\n        <i class='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        class='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Job\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <Link class='btn btn-light my-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { useState } from \"react\"; //* racfp\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any school or bootcamp that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Program\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <>\n      <div className='profile bg-light'>\n        <img src={avatar} alt='avatar' className='round-img' />\n        <div>\n          <h2>{name}</h2>\n          <p>\n            {status} {company && <span> at {company} </span>}\n          </p>\n          <p className='my-1'>{location && <span> {location} </span>}</p>\n          <Link to={`profile/${_id}`} className='btn btn-primary'>\n            View Profile\n          </Link>\n        </div>\n        <ul>\n          {skills.slice(0, 4).map((skill, index) => (\n            <li key={index} className='text-primary'>\n              <i className='fas fa-check' /> {skill}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h1 className='large text-primary'>Davelopers</h1>\n          <p className='lead'>\n            <i className='fab fa connectdevelop'></i> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4> No profiles found... </h4>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    company,\n    website,\n    location,\n    status,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <>\n      <div className='profile-top bg-primary p-2'>\n        <img className='round-img my-1' src={avatar} alt='' />\n        <h1 className='large'>{name}</h1>\n        <p className='lead'>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p>{location && <span>{location}</span>}</p>\n        <div className='icons my-1'>\n          {website && (\n            // target='_blank' -> opens on a new tab\n            // rel='noopener noreferrer' -> fix google chrome warning\n            <a\n              href={\"http://\" + website}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <i className='fas fa-globe fa-2x'></i>\n            </a>\n          )}\n          {social && social.twitter && (\n            <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-twitter fa-2x'></i>\n            </a>\n          )}\n\n          {social && social.facebook && (\n            <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-facebook fa-2x'></i>\n            </a>\n          )}\n          {social && social.linkedin && (\n            <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-linkedin fa-2x'></i>\n            </a>\n          )}\n          {social && social.youtube && (\n            <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-youtube fa-2x'></i>\n            </a>\n          )}\n          {social && social.instagram && (\n            <a\n              href={social.instagram}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <i className='fab fa-instagram fa-2x'></i>\n            </a>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nProfileTop.propTypes = { profile: PropTypes.object.isRequired };\n\nexport default ProfileTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <>\n      <div className='profile-about bg-light p-2'>\n        {bio && (\n          <>\n            <h2 className='text-primary'>\n              {name.split(\"\")[name.length - 1] !== \"s\"\n                ? name.trim().split(\" \")[0] + \"'\"\n                : name.trim().split(\" \")[0] + \"'s\"}{\" \"}\n              Bio\n            </h2>\n            <p>{bio}</p>\n            <div className='line'></div>\n          </>\n        )}\n        <h2 className='text-primary'>Skill Set</h2>\n        <div className='skills'>\n          {skills.map((skill, i) => (\n            <div key={i} className='p-1'>\n              <i className='fas fa-check'></i> {skill}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => {\n  return (\n    <>\n      <h3 className='text-dark'>{company}</h3>\n      <p>\n        <Moment format='YYYY/MM/DD'>{from}</Moment> -{\" \"}\n        {!to ? \" Now\" : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position: </strong> {title}\n      </p>\n      <p>\n        <strong>Description: </strong> {description}\n      </p>\n    </>\n  );\n};\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => {\n  return (\n    <>\n      <h3 className='text-dark'>{school}</h3>\n      <p>\n        <Moment format='YYYY/MM/DD'>{from}</Moment> -{\" \"}\n        {!to ? \" Now\" : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n      </p>\n      <p>\n        <strong>Position: </strong> {degree}\n      </p>\n      <p>\n        <strong>Field of Stuudy: </strong> {fieldofstudy}\n      </p>\n      <p>\n        <strong>Description: </strong> {description}\n      </p>\n    </>\n  );\n};\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGitHubRepos } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = ({ username, getGitHubRepos, repos }) => {\n  useEffect(() => {\n    getGitHubRepos(username);\n  }, [getGitHubRepos, username]);\n  return (\n    <>\n      <div className='profile-github'>\n        <h2 className='text-primary my-1'>Github Repos</h2>\n        {repos === null ? (\n          <Spinner />\n        ) : (\n          repos.map((repo) => (\n            <div key={repo._id} className='repo bg-white p-1 my-1'>\n              <div>\n                <h4>\n                  <a\n                    href={repo.html_url}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                  >\n                    {repo.name}\n                  </a>\n                </h4>\n                <p>{repo.description}</p>\n              </div>\n              <div>\n                <ul>\n                  <li className='badge badge-primary'>\n                    Stars: {repos.stargazers_count}\n                  </li>\n                  <li className='badge badge-dark'>\n                    Watchers: {repos.watchers_count}\n                  </li>\n                  <li className='badge badge-light'>\n                    Forks: {repos.forks_count}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired,\n  getGitHubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGitHubRepos })(ProfileGithub);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to='/profiles' className='btn btn-light'>\n            Back to Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div class='profile-grid my-1'>\n            <ProfileTop profile={profile}></ProfileTop>\n            <ProfileAbout profile={profile}></ProfileAbout>\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience.id}\n                      experience={experience}\n                    />\n                  ))}\n                </>\n              ) : (\n                <h4> No experience credentials </h4>\n              )}\n            </div>\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education.id}\n                      education={education}\n                    />\n                  ))}\n                </>\n              ) : (\n                <h4> No education credentials </h4>\n              )}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  auth,\n  showActions,\n}) => {\n  return (\n    <>\n      <div className='post bg-white p-1 my-1'>\n        <div>\n          <Link to={`/profile/${user}`}>\n            <img className='round-img' src={avatar} alt='' />\n            <h4>{name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p className='my-1'>{text}</p>\n          <p className='post-date'>\n            Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n          </p>\n          {showActions && (\n            <>\n              <button\n                onClick={(e) => addLike(_id)}\n                type='button'\n                className='btn btn-light'\n              >\n                <i className='fas fa-thumbs-up'></i>\n                {likes.length > 0 && <span>{likes.length}</span>}\n              </button>\n              <button\n                onClick={(e) => removeLike(_id)}\n                type='button'\n                className='btn btn-light'\n              >\n                <i className='fas fa-thumbs-down'></i>\n              </button>\n              <Link to={`/posts/${_id}`} className='btn btn-primary'>\n                Discussion{\" \"}\n                {comments.length > 0 && (\n                  <span className='comment-count'>{comments.length}</span>\n                )}\n              </Link>\n              {!auth.loading && user === auth.user._id && (\n                <button\n                  onClick={(e) => deletePost(_id)}\n                  type='button'\n                  className='btn btn-danger'\n                >\n                  <i className='fas fa-times'></i>\n                </button>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n/**\n * @description Get posts\n */\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - GET_POSTS error - getPosts\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description add like\n */\n\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg:\n          err.response.statusText +\n          \" - UPDATE_LIKES error - addLike\" +\n          \" \" +\n          (id && id),\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description remove like\n */\n\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - UPDATE_LIKES error - removeLike\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Delete Post\n */\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - DELETE_POST error - deletePost\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Add Post\n */\n\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - ADD_POST error - addPost\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Get post\n */\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg:\n          err.response.statusText +\n          \" - GET_POST error - getPost - \" +\n          \"Post Id: \" +\n          id,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Add comment\n */\n\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comments/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText + \" - ADD_COMMENT error - addComment\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n/**\n * @description Remove a comment\n */\n\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg:\n          err.response.statusText + \" - REMOVE_COMMENT error - deleteComment\",\n        status: err.response.status,\n      },\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className='post-form'>\n        <div className='bg-primary p'>\n          <h3>Say Something...</h3>\n        </div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            addPost({ text });\n            setText(\"\");\n          }}\n          className='form my-1'\n        >\n          <textarea\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            value={text}\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Create a post'\n            required\n          ></textarea>\n          <input type='submit' className='btn btn-dark my-1' value='Submit' />\n        </form>\n      </div>\n    </>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport PostForm from \"../posts/PostForm\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h1 className='large text-primary'>Posts</h1>\n          <p className='lead'>\n            <i className='fas fa-user'></i>Welcome to the community\n          </p>\n          <PostForm />\n          <div className='posts'>\n            {posts.map((post) => (\n              <PostItem key={post._id} post={post} />\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteComment } from \"../../actions/post\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\n\nconst CommentItem = ({\n  deleteComment,\n  comment: { _id, text, name, avatar, user, date },\n  postId,\n  auth,\n}) => (\n  <>\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on\n          <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            type='button'\n            className='btn btn-danger'\n            onClick={(e) => {\n              deleteComment(postId, _id);\n            }}\n          >\n            <i className='fas fa-times'></i>\n          </button>\n        )}\n      </div>\n    </div>\n  </>\n);\n\nCommentItem.propTypes = {\n  deleteComment: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className='post-form'>\n        <div className='bg-primary p'>\n          <h3>Leave a Comment</h3>\n        </div>\n        <form\n          className='form my-1'\n          onSubmit={(e) => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText(\"\");\n          }}\n        >\n          <textarea\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            value={text}\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Your comment...'\n            required\n          ></textarea>\n          <input type='submit' className='btn btn-dark my-1' value='Submit' />\n        </form>\n      </div>\n    </>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentItem from \"../post/CommentItem\";\nimport CommentForm from \"../post/CommentForm\";\nimport { getPost } from \"../../actions/post\";\nimport { Link } from \"react-router-dom\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return (\n    <>\n      {loading || post === null ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to='/posts' className='btn'>\n            Back\n          </Link>\n          <PostItem post={post} showActions={false} />\n          <CommentForm postId={post._id} />\n          <div className='comments'>\n            {post.comments.map((comment) => (\n              <CommentItem\n                key={comment._id}\n                comment={comment}\n                postId={post._id}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from \"react\";\n\nexport const NotFound = () => {\n  return (\n    <>\n      <h1 className='x-large text-primary'>\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\n      </h1>\n      <p className='large'>Sorry, this page doesn't exist</p>\n    </>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n//to interact with the auth state in the Auth reducer connect must be imported\nimport { connect } from \"react-redux\";\n\n/**\n * @description the PrivateRoute component forces the user to another route when not Authenticated\n */\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired, //ptor\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport Register from \"../auth/Register\";\nimport Login from \"../auth/Login\";\nimport Alert from \"../layout/Alert\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport CreateProfile from \"../profile-form/CreateProfile\";\nimport EditProfile from \"../profile-form/EditProfile\";\nimport AddExperience from \"../profile-form/AddExperience\";\nimport AddEducation from \"../profile-form/AddEducation\";\nimport Profiles from \"../profiles/Profiles\";\nimport Profile from \"../profile/Profile\";\nimport Posts from \"../posts/Posts\";\nimport Post from \"../post/Post\";\nimport NotFound from \"../layout/NotFound\";\nimport PrivateRoute from \"../routing/PrivateRoute\";\nimport { Route, Switch } from \"react-router-dom\";\n\nexport const Routes = () => {\n  return (\n    <>\n      <section className='container'>\n        <Alert />\n        <Switch>\n          <Route path='/register' component={Register} exact />\n          <Route path='/login' component={Login} exact />\n          <Route path='/profiles' component={Profiles} exact />\n          <Route path='/profile/:id' component={Profile} exact />\n          <PrivateRoute path='/dashboard' component={Dashboard} exact />\n          <PrivateRoute path='/posts' component={Posts} exact />\n          <PrivateRoute path='/posts/:id' component={Post} exact />\n          <PrivateRoute\n            path='/create-profile'\n            component={CreateProfile}\n            exact\n          />\n          <PrivateRoute path='/edit-profile' component={EditProfile} exact />\n          <PrivateRoute\n            path='/add-experience'\n            component={AddExperience}\n            exact\n          />\n          <PrivateRoute path='/add-education' component={AddEducation} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </section>\n    </>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\n//the span arround the text is to let just the icon to show in mobile devices\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user'></i>{\" \"}\n          <span className='hide-sm'>Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href='/login'>\n          <i className='fas fa-sing-out-alt'></i>{\" \"}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <div>\n      {\" \"}\n      <nav className='navbar bg-dark'>\n        <h1>\n          <Link to='/'>\n            <i className='fas fa-code'></i> Mi Red Social\n          </Link>\n        </h1>\n        {!loading && <>{isAuthenticated ? authLinks : guestLinks}</>}\n      </nav>\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired, //ptfr\n  auth: PropTypes.object.isRequired, //ptor\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","//racfe→ functional component\n//clg→\tconsole.log(object)\nimport React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\"; //impt\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <div>\n      <section className='landing'>\n        <div className='dark-overlay'>\n          <div className='landing-inner'>\n            <h1 className='x-large'>Mi Red Social</h1>\n            <p className='lead'>\n              \n            </p>\n            <div className='buttons'>\n              <Link to='/register' className='btn btn-primary'>\n                Sign Up\n              </Link>\n              <Link to='/login' className='btn btn-light'>\n                Login\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      //convention: data sent may be called payload\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOG_OUT,\n  ACCOUNT_DELETED,\n} from \"../actions/types\";\n\n/**\n *  @name token from localStorage\n *  @name isAuthenticated certifies that user is loged in\n *  @name loading same as in auth reducer. True by default, changes to false once a request is made\n *  @name error hold any error object in the request\n */\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOG_OUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_REPOS,\n} from \"../actions/types\";\n\n/**\n * @name profile When logged in, it'll hold all the profile data, or other users\n * @name profiles Array for profile listing pages. State of devs list.\n * @name repos Holds the data for Github repositories\n * @name loading Same as in auth reducer. True by default, changes to false once a request is made\n * @name error hold any error object in the request\n */\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\n/**\n *  @name posts array of posts\n *  @name post current post. Null by default\n *  @name loading same as in auth reducer. True by default, changes to false once a request is made\n *  @name error hold any error object in the request\n */\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n          loading: false,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\n\nexport default combineReducers({ alert, auth, profile, post });\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Routes from \"./components/routing/Routes\";\n\nimport NavBar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\n\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst { token } = localStorage;\nif (token) {\n  setAuthToken(token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <>\n          <NavBar />\n          <Switch>\n            <Route path='/' component={Landing} exact />\n            <Route component={Routes} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </Provider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}